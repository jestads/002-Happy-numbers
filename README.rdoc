= Happy Numbers

Part 1 - Happy number
---------------------

Your task is to write a function to identify the happy numbers less than a given limit.

According to Wikipedia:

A happy number is defined by the following process. Starting with any positive integer, replace the number by the sum of the squares of its digits, and repeat the process until the number equals 1 (where it will stay), or it loops endlessly in a cycle which does not include 1. Those numbers for which this process ends in 1 are happy numbers, while those that do not end in 1 are unhappy numbers (or sad numbers).

For example, 7 is a happy number, as
  7^2                            =  49,
  4^2 + 9^2       = 16 + 81      =  97,
  9^2 + 7^2       = 81 + 49      = 130,
  1^2 + 3^2 + 0^2 =  1 +  9 +  0 =  10,
  1^2 + 0^2       =  1 +  0      =   1.

But 17 is not a happy number, as
  1^2 + 7^2       =  1 + 49      =  50,
  5^2 + 0^2       = 25 +  0      =  25,
  2^2 + 5^2       =  4 + 25      =  29,
  2^2 + 9^2       =  4 + 81      =  85,
  8^2 + 5^2       = 64 + 25      =  89,
  8^2 + 9^2       = 64 + 81      = 145,
  1^2 + 4^2 + 5^2 =  1 + 16 + 25 =  42,
  4^2 + 2^2       = 16 +  4      =  20,
  2^2 + 0^2       =  4 +  0      =   4,
  4^2                            =  16,
  1^2 + 6^2       =  1 + 36      =  37,
  3^2 + 7^2       =  9 + 49      =  58,
  5^2 + 8^2       = 25 + 64      =  89, which forms a loop.

For example:

  happy(50) => 1, 7, 10, 13, 19, 23, 28, 31, 32, 44, 49 

Part 2 - Happy cube
-------------------

Your task is to write a function to identify the happy cubes numbers less than a given limit like done previously.

For example, 153 is not a happy cube number, as
  1^3 + 5^3 + 3^3 = 1 + 125 + 27 = 153

Part 3 - Happy word
-------------------

Your task is to try to find out if a word is happy, assign each digit a number from 1 to 26, and then add those numbers together.

For example, Happy is not a "happy word".

 h^2 + a^2 + p^2 + p^2 + y^2 = 8^2 + 1^2 + 16^2 + 16^2 + 25^2 = 64 + 1 + 256 + 256 + 625 = 1202
 1^2 + 2^2 + 0^2 + 2^2 = 1 + 4 + 0 + 4 =  9
 9^2                                   =  81
 8^2 + 1^2             = 64 +  1       =  65
 6^2 + 5^2             = 36 + 25       =  61
 6^2 + 1^2             = 36 +  1       =  37
 3^2 + 7^2             =  9 + 49       =  58
 5^2 + 8^2             = 25 + 64       =  89
 8^2 + 9^2             = 64 + 81       = 145
 1^2 + 4^2 + 5^2       =  1 + 16 + 25  =  51
 5^2 + 1^2             = 25 +  1       =  26
 2^2 + 6^2             =  4 + 36       =  40
 4^2 + 0^2             =  4 +  0       =   4
 4^2                                   =  16,
 1^2 + 6^2             =  1 + 36       =  37,
 3^2 + 7^2             =  9 + 49       =  58,
 5^2 + 8^2             = 25 + 64       =  89, which forms a loop.


source: http://programmingpraxis.com/2010/07/23/happy-numbers/
        http://www.douglastwitchell.com/happynumbercalculator.asp

== Contributing to Happy Numbers
 
* Check out the latest master to make sure the feature hasn't been implemented or the bug hasn't been fixed yet
* Check out the issue tracker to make sure someone already hasn't requested it and/or contributed it
* Fork the project
* Start a feature/bugfix branch
* Commit and push until you are happy with your contribution
* Make sure to add tests for it. This is important so I don't break it in a future version unintentionally.
* Please try not to mess with the Rakefile, version, or history. If you want to have your own version, or is otherwise necessary, that is fine, but please isolate to its own commit so I can cherry-pick around it.

== Copyright

Copyright (c) 2011 Jesta Development Service inc. See LICENSE.txt for
further details.

